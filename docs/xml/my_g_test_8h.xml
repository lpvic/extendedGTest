<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="my_g_test_8h" kind="file" language="C++">
    <compoundname>myGTest.h</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1">
        <label>include/myGTest.h</label>
        <link refid="my_g_test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmy_g_test_1_1_colors" prot="public">myGTest::Colors</innerclass>
    <innernamespace refid="namespacemy_g_test">myGTest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="namespacemy_g_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemy_g_test" kindref="compound">myGTest</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ANSI<sp/>Codes<sp/>-&gt;<sp/>https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="structmy_g_test_1_1_colors" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmy_g_test_1_1_colors" kindref="compound">Colors</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="structmy_g_test_1_1_colors_1a733911b7b4b5c087998b2df31313e875" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1a733911b7b4b5c087998b2df31313e875" kindref="member">DEFAULT</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;0m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12" refid="structmy_g_test_1_1_colors_1af6602e01f0a42c01560e0fc77b91b939" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1af6602e01f0a42c01560e0fc77b91b939" kindref="member">BLACK</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;30m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13" refid="structmy_g_test_1_1_colors_1ada7aec3f7177ecf31f3ebfbe3b1a60c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1ada7aec3f7177ecf31f3ebfbe3b1a60c8" kindref="member">RED</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;31m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14" refid="structmy_g_test_1_1_colors_1a3c96aefc84c80c9abcc5972f5cc2f946" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1a3c96aefc84c80c9abcc5972f5cc2f946" kindref="member">GREEN</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;32m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15" refid="structmy_g_test_1_1_colors_1a7a5cddca06cc86c8247a565fbe8b17e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1a7a5cddca06cc86c8247a565fbe8b17e8" kindref="member">YELLOW</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;33m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16" refid="structmy_g_test_1_1_colors_1ad49e4db6df5e42955dbdb23f1bb72921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1ad49e4db6df5e42955dbdb23f1bb72921" kindref="member">BLUE</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;34m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17" refid="structmy_g_test_1_1_colors_1a278dbfc7b510cfc835cb34cec2b4fe99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1a278dbfc7b510cfc835cb34cec2b4fe99" kindref="member">MAGENTA</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;35m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18" refid="structmy_g_test_1_1_colors_1a72ec306bdb131f0c630efd1e65f348f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1a72ec306bdb131f0c630efd1e65f348f0" kindref="member">CYAN</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;36m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19" refid="structmy_g_test_1_1_colors_1adcf7d127e4558d85f577a7e55d219f6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmy_g_test_1_1_colors_1adcf7d127e4558d85f577a7e55d219f6f" kindref="member">WHITE</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;37m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20" refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>{<ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90aa9cf6199ad4732a660802c403f9a9c83" kindref="member">RIGHT</ref>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespacemy_g_test_1aea48d69a1884a0cc07ebeb162eed4bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemy_g_test_1aea48d69a1884a0cc07ebeb162eed4bc3" kindref="member">gtest_line</ref>(std::string<sp/>box_content,<sp/>std::string<sp/>message,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="namespacemy_g_test_1abcd64cb10a38eff92b3272d9e155074f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1abcd64cb10a38eff92b3272d9e155074f" kindref="member">myASSERT_THAT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacemy_g_test_1ad5ef5f1064468249681eaf667c3fe589" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1ad5ef5f1064468249681eaf667c3fe589" kindref="member">myASSERT_TRUE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespacemy_g_test_1a6c0b8fe9d3ec9df51df1fe99c82ef787" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a6c0b8fe9d3ec9df51df1fe99c82ef787" kindref="member">myASSERT_FALSE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespacemy_g_test_1a6ca21cf0fe43681944442eb36a594aee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a6ca21cf0fe43681944442eb36a594aee" kindref="member">myASSERT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="namespacemy_g_test_1a7998b4960edc3dbe319d1b66ca488763" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a7998b4960edc3dbe319d1b66ca488763" kindref="member">myASSERT_NE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="namespacemy_g_test_1a3eac386e568952992261abbca93310ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a3eac386e568952992261abbca93310ab" kindref="member">myASSERT_LT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="namespacemy_g_test_1a6531914b3c811c8851fcbdb8c9891ad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a6531914b3c811c8851fcbdb8c9891ad9" kindref="member">myASSERT_GT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="namespacemy_g_test_1a2269d9ad4c382b3545e1f118da6e5fb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a2269d9ad4c382b3545e1f118da6e5fb3" kindref="member">myASSERT_LE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="namespacemy_g_test_1a8f3f2649e95c05cfe8cc31ddf6c11caf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a8f3f2649e95c05cfe8cc31ddf6c11caf" kindref="member">myASSERT_GE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="namespacemy_g_test_1a870dcd96b552bd7b5991634af48c2401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a870dcd96b552bd7b5991634af48c2401" kindref="member">myASSERT_STREQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="namespacemy_g_test_1a66ed1a5f835295c97617939c7c2093ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a66ed1a5f835295c97617939c7c2093ee" kindref="member">myASSERT_STRNE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="namespacemy_g_test_1a80937624ba2b78c482ee188c25bf67cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a80937624ba2b78c482ee188c25bf67cc" kindref="member">myASSERT_STRCASEEQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="namespacemy_g_test_1aafdf6ae077c0ffa51dc581d2aa773f59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1aafdf6ae077c0ffa51dc581d2aa773f59" kindref="member">myASSERT_STRCASENE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="namespacemy_g_test_1a39b2495052083d9b730ea67045bad519" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a39b2495052083d9b730ea67045bad519" kindref="member">myASSERT_FLOAT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="namespacemy_g_test_1a9bb908865a74c203e747a4fd52353c4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a9bb908865a74c203e747a4fd52353c4d" kindref="member">myASSERT_DOUBLE_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="namespacemy_g_test_1a3e8ef000e5783330daf6ff405b3c990d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a3e8ef000e5783330daf6ff405b3c990d" kindref="member">myASSERT_NEAR</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="namespacemy_g_test_1a499ce5e86abd6f3fccb4d7c7037a987b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a499ce5e86abd6f3fccb4d7c7037a987b" kindref="member">myASSERT_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="namespacemy_g_test_1aa12e15c9979cf02d2d3199ba5c04b7b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1aa12e15c9979cf02d2d3199ba5c04b7b2" kindref="member">myASSERT_ANY_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="namespacemy_g_test_1a3836439e852eb723266568fae92a727e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a3836439e852eb723266568fae92a727e" kindref="member">myASSERT_NO_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="namespacemy_g_test_1a6a84e3d5372a0e80f7a3fb073d1c0756" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a6a84e3d5372a0e80f7a3fb073d1c0756" kindref="member">myEXPECT_THAT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="namespacemy_g_test_1a8779ea65db6d8deac9df7cee6a070a0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a8779ea65db6d8deac9df7cee6a070a0c" kindref="member">myEXPECT_TRUE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="namespacemy_g_test_1a3bc1b0437e49e45d2af72da095998b53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a3bc1b0437e49e45d2af72da095998b53" kindref="member">myEXPECT_FALSE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="namespacemy_g_test_1a814e160acc6dff0decc6e494074d9630" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a814e160acc6dff0decc6e494074d9630" kindref="member">myEXPECT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="namespacemy_g_test_1a9ee009c0d8a1c93a1bb489c35ef76ef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a9ee009c0d8a1c93a1bb489c35ef76ef6" kindref="member">myEXPECT_NE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="namespacemy_g_test_1ac5934740a77569eeb9543898829d79a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1ac5934740a77569eeb9543898829d79a8" kindref="member">myEXPECT_LT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="namespacemy_g_test_1ad2137c1a1b7fb05bcccaf566e2cd2285" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1ad2137c1a1b7fb05bcccaf566e2cd2285" kindref="member">myEXPECT_GT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="namespacemy_g_test_1a3b43df428bc8a62c55fbeaf2ac9c6d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a3b43df428bc8a62c55fbeaf2ac9c6d65" kindref="member">myEXPECT_LE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="namespacemy_g_test_1a82caabd3f4ce713d2fdb106c9903f5e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a82caabd3f4ce713d2fdb106c9903f5e3" kindref="member">myEXPECT_GE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="namespacemy_g_test_1a994c5359977ae746c96d69e9befb5a75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a994c5359977ae746c96d69e9befb5a75" kindref="member">myEXPECT_STREQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="namespacemy_g_test_1ad660230d6606c4e308b9501992d8ee26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1ad660230d6606c4e308b9501992d8ee26" kindref="member">myEXPECT_STRNE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="namespacemy_g_test_1a12f3e18a7e88879760f8cf606bea5040" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a12f3e18a7e88879760f8cf606bea5040" kindref="member">myEXPECT_STRCASEEQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="namespacemy_g_test_1a98efa7c9993bd174bcc6ced9a98a2681" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a98efa7c9993bd174bcc6ced9a98a2681" kindref="member">myEXPECT_STRCASENE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="namespacemy_g_test_1a67efe51f78586ed48769e07f21dc555d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a67efe51f78586ed48769e07f21dc555d" kindref="member">myEXPECT_FLOAT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="namespacemy_g_test_1aaae61a3a765d9260a40835e5e31cd097" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1aaae61a3a765d9260a40835e5e31cd097" kindref="member">myEXPECT_DOUBLE_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="namespacemy_g_test_1af0a139b6da9ae109d041cdb791d9318c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1af0a139b6da9ae109d041cdb791d9318c" kindref="member">myEXPECT_NEAR</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="namespacemy_g_test_1a7ff51ef6520b63daa32c1b10ccffe2ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1a7ff51ef6520b63daa32c1b10ccffe2ae" kindref="member">myEXPECT_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="namespacemy_g_test_1aa66ee088f4f62789bd8e87b99a381e7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1aa66ee088f4f62789bd8e87b99a381e7d" kindref="member">myEXPECT_ANY_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="namespacemy_g_test_1af39d233524659bbb70fc43a471e8fe70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemy_g_test_1af39d233524659bbb70fc43a471e8fe70" kindref="member">myEXPECT_NO_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/myGTest.h"/>
  </compounddef>
</doxygen>

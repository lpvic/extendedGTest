<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespacemy_g_test" kind="namespace" language="C++">
    <compoundname>myGTest</compoundname>
    <innerclass refid="structmy_g_test_1_1_colors" prot="public">myGTest::Colors</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" prot="public" static="no" strong="no">
        <type></type>
        <name>align_type</name>
        <qualifiedname>myGTest::align_type</qualifiedname>
        <enumvalue id="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" prot="public">
          <name>LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90aa9cf6199ad4732a660802c403f9a9c83" prot="public">
          <name>RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Text align inside the box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="25" column="5" bodyfile="include/myGTest.h" bodystart="25" bodyend="25"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacemy_g_test_1a01939ba3a9ca73cee8ed466a39f9ab07" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structmy_g_test_1_1_colors" kindref="compound">myGTest::Colors</ref></type>
        <definition>const struct myGTest::Colors myGTest::COLORS</definition>
        <argsstring></argsstring>
        <name>COLORS</name>
        <qualifiedname>myGTest::COLORS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="20" column="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemy_g_test_1aea48d69a1884a0cc07ebeb162eed4bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string myGTest::gtest_line</definition>
        <argsstring>(std::string box_content, std::string message, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>gtest_line</name>
        <qualifiedname>myGTest::gtest_line</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>box_content</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Returns a string in the same format as the standard GoogleTest output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="36" column="17" declfile="include/myGTest.h" declline="36" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1abcd64cb10a38eff92b3272d9e155074f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_THAT</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_THAT</name>
        <qualifiedname>myGTest::myASSERT_THAT</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_THAT that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="47" column="10" declfile="include/myGTest.h" declline="47" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1ad5ef5f1064468249681eaf667c3fe589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_TRUE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_TRUE</name>
        <qualifiedname>myGTest::myASSERT_TRUE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_TRUE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="58" column="10" declfile="include/myGTest.h" declline="58" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a6c0b8fe9d3ec9df51df1fe99c82ef787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_FALSE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_FALSE</name>
        <qualifiedname>myGTest::myASSERT_FALSE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_FALSE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="69" column="10" declfile="include/myGTest.h" declline="69" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a6ca21cf0fe43681944442eb36a594aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_EQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_EQ</name>
        <qualifiedname>myGTest::myASSERT_EQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_EQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="80" column="10" declfile="include/myGTest.h" declline="80" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a7998b4960edc3dbe319d1b66ca488763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_NE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_NE</name>
        <qualifiedname>myGTest::myASSERT_NE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_NE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="91" column="10" declfile="include/myGTest.h" declline="91" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a3eac386e568952992261abbca93310ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_LT</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_LT</name>
        <qualifiedname>myGTest::myASSERT_LT</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_LT that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="102" column="10" declfile="include/myGTest.h" declline="102" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a6531914b3c811c8851fcbdb8c9891ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_GT</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_GT</name>
        <qualifiedname>myGTest::myASSERT_GT</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_GT that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="113" column="10" declfile="include/myGTest.h" declline="113" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a2269d9ad4c382b3545e1f118da6e5fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_LE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_LE</name>
        <qualifiedname>myGTest::myASSERT_LE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_LE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="124" column="10" declfile="include/myGTest.h" declline="124" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a8f3f2649e95c05cfe8cc31ddf6c11caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_GE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_GE</name>
        <qualifiedname>myGTest::myASSERT_GE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_GE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="135" column="10" declfile="include/myGTest.h" declline="135" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a870dcd96b552bd7b5991634af48c2401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_STREQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_STREQ</name>
        <qualifiedname>myGTest::myASSERT_STREQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_STREQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="146" column="10" declfile="include/myGTest.h" declline="146" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a66ed1a5f835295c97617939c7c2093ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_STRNE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_STRNE</name>
        <qualifiedname>myGTest::myASSERT_STRNE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_STRNE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="157" column="10" declfile="include/myGTest.h" declline="157" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a80937624ba2b78c482ee188c25bf67cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_STRCASEEQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_STRCASEEQ</name>
        <qualifiedname>myGTest::myASSERT_STRCASEEQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_STRCASEEQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="168" column="10" declfile="include/myGTest.h" declline="168" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1aafdf6ae077c0ffa51dc581d2aa773f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_STRCASENE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_STRCASENE</name>
        <qualifiedname>myGTest::myASSERT_STRCASENE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_STRCASENE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="179" column="10" declfile="include/myGTest.h" declline="179" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a39b2495052083d9b730ea67045bad519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_FLOAT_EQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_FLOAT_EQ</name>
        <qualifiedname>myGTest::myASSERT_FLOAT_EQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_FLOAT_EQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="190" column="10" declfile="include/myGTest.h" declline="190" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a9bb908865a74c203e747a4fd52353c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_DOUBLE_EQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_DOUBLE_EQ</name>
        <qualifiedname>myGTest::myASSERT_DOUBLE_EQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_DOUBLE_EQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="201" column="10" declfile="include/myGTest.h" declline="201" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a3e8ef000e5783330daf6ff405b3c990d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_NEAR</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_NEAR</name>
        <qualifiedname>myGTest::myASSERT_NEAR</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_NEAR that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="212" column="10" declfile="include/myGTest.h" declline="212" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a499ce5e86abd6f3fccb4d7c7037a987b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_THROW</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_THROW</name>
        <qualifiedname>myGTest::myASSERT_THROW</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_THROW that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="223" column="10" declfile="include/myGTest.h" declline="223" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1aa12e15c9979cf02d2d3199ba5c04b7b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_ANY_THROW</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_ANY_THROW</name>
        <qualifiedname>myGTest::myASSERT_ANY_THROW</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_ANY_THROW that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="234" column="10" declfile="include/myGTest.h" declline="234" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a3836439e852eb723266568fae92a727e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myASSERT_NO_THROW</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myASSERT_NO_THROW</name>
        <qualifiedname>myGTest::myASSERT_NO_THROW</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro ASSERT_NO_THROW that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="245" column="10" declfile="include/myGTest.h" declline="245" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a6a84e3d5372a0e80f7a3fb073d1c0756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_THAT</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_THAT</name>
        <qualifiedname>myGTest::myEXPECT_THAT</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_THAT that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="256" column="10" declfile="include/myGTest.h" declline="256" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a8779ea65db6d8deac9df7cee6a070a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_TRUE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_TRUE</name>
        <qualifiedname>myGTest::myEXPECT_TRUE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_TRUE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="267" column="10" declfile="include/myGTest.h" declline="267" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a3bc1b0437e49e45d2af72da095998b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_FALSE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_FALSE</name>
        <qualifiedname>myGTest::myEXPECT_FALSE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_FALSE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="278" column="10" declfile="include/myGTest.h" declline="278" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a814e160acc6dff0decc6e494074d9630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_EQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_EQ</name>
        <qualifiedname>myGTest::myEXPECT_EQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_EQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="289" column="10" declfile="include/myGTest.h" declline="289" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a9ee009c0d8a1c93a1bb489c35ef76ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_NE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_NE</name>
        <qualifiedname>myGTest::myEXPECT_NE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_NE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="300" column="10" declfile="include/myGTest.h" declline="300" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1ac5934740a77569eeb9543898829d79a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_LT</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_LT</name>
        <qualifiedname>myGTest::myEXPECT_LT</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_LT that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="311" column="10" declfile="include/myGTest.h" declline="311" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1ad2137c1a1b7fb05bcccaf566e2cd2285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_GT</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_GT</name>
        <qualifiedname>myGTest::myEXPECT_GT</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_GT that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="322" column="10" declfile="include/myGTest.h" declline="322" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a3b43df428bc8a62c55fbeaf2ac9c6d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_LE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_LE</name>
        <qualifiedname>myGTest::myEXPECT_LE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_LE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="333" column="10" declfile="include/myGTest.h" declline="333" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a82caabd3f4ce713d2fdb106c9903f5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_GE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_GE</name>
        <qualifiedname>myGTest::myEXPECT_GE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_GE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="344" column="10" declfile="include/myGTest.h" declline="344" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a994c5359977ae746c96d69e9befb5a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_STREQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_STREQ</name>
        <qualifiedname>myGTest::myEXPECT_STREQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_STREQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="355" column="10" declfile="include/myGTest.h" declline="355" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1ad660230d6606c4e308b9501992d8ee26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_STRNE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_STRNE</name>
        <qualifiedname>myGTest::myEXPECT_STRNE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_STRNE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="366" column="10" declfile="include/myGTest.h" declline="366" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a12f3e18a7e88879760f8cf606bea5040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_STRCASEEQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_STRCASEEQ</name>
        <qualifiedname>myGTest::myEXPECT_STRCASEEQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_STRCASEEQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="377" column="10" declfile="include/myGTest.h" declline="377" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a98efa7c9993bd174bcc6ced9a98a2681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_STRCASENE</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_STRCASENE</name>
        <qualifiedname>myGTest::myEXPECT_STRCASENE</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_STRCASENE that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="388" column="10" declfile="include/myGTest.h" declline="388" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a67efe51f78586ed48769e07f21dc555d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_FLOAT_EQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_FLOAT_EQ</name>
        <qualifiedname>myGTest::myEXPECT_FLOAT_EQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_FLOAT_EQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="399" column="10" declfile="include/myGTest.h" declline="399" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1aaae61a3a765d9260a40835e5e31cd097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_DOUBLE_EQ</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_DOUBLE_EQ</name>
        <qualifiedname>myGTest::myEXPECT_DOUBLE_EQ</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_DOUBLE_EQ that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="410" column="10" declfile="include/myGTest.h" declline="410" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1af0a139b6da9ae109d041cdb791d9318c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_NEAR</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_NEAR</name>
        <qualifiedname>myGTest::myEXPECT_NEAR</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_NEAR that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="421" column="10" declfile="include/myGTest.h" declline="421" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1a7ff51ef6520b63daa32c1b10ccffe2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_THROW</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_THROW</name>
        <qualifiedname>myGTest::myEXPECT_THROW</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_THROW that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="432" column="10" declfile="include/myGTest.h" declline="432" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1aa66ee088f4f62789bd8e87b99a381e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_ANY_THROW</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_ANY_THROW</name>
        <qualifiedname>myGTest::myEXPECT_ANY_THROW</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_ANY_THROW that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="443" column="10" declfile="include/myGTest.h" declline="443" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemy_g_test_1af39d233524659bbb70fc43a471e8fe70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGTest::myEXPECT_NO_THROW</definition>
        <argsstring>(auto test, auto expectation, std::string box_text=&quot;&quot;, std::string message=&quot;&quot;, std::string color=COLORS.DEFAULT, align_type align=LEFT)</argsstring>
        <name>myEXPECT_NO_THROW</name>
        <qualifiedname>myGTest::myEXPECT_NO_THROW</qualifiedname>
        <param>
          <type>auto</type>
          <declname>test</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>expectation</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>box_text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
          <defval>COLORS.DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90" kindref="member">align_type</ref></type>
          <declname>align</declname>
          <defval><ref refid="namespacemy_g_test_1a16051aa95ccf9dca2044165973a1fc90a0d116e2113bf3343cc31ab167665262a" kindref="member">LEFT</ref></defval>
        </param>
        <briefdescription>
<para>Wrapper for GoogleTest macro EXPECT_NO_THROW that prints additional information in the same format as the test summary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box_content</parametername>
</parameternamelist>
<parameterdescription>
<para>Text inside the left box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text after the box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of the message text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of the text inside the box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string The formatted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/myGTest.h" line="454" column="10" declfile="include/myGTest.h" declline="454" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/myGTest.h" line="8" column="1"/>
  </compounddef>
</doxygen>

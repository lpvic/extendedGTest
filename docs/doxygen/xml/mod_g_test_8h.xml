<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="mod_g_test_8h" kind="file" language="C++">
    <compoundname>modGTest.h</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1">
        <label>include/modGTest.h</label>
        <link refid="mod_g_test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmod_g_test_1_1_colors" prot="public">modGTest::Colors</innerclass>
    <innernamespace refid="namespacemod_g_test">modGTest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="namespacemod_g_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemod_g_test" kindref="compound">modGTest</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ANSI<sp/>Codes<sp/>-&gt;<sp/>https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="structmod_g_test_1_1_colors" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmod_g_test_1_1_colors" kindref="compound">Colors</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="structmod_g_test_1_1_colors_1ad6624e5c3a5831dccce4ce57e3c51358" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1ad6624e5c3a5831dccce4ce57e3c51358" kindref="member">DEFAULT</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;0m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12" refid="structmod_g_test_1_1_colors_1a5680028fd8b8cc23c4bd31d4fce90cdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1a5680028fd8b8cc23c4bd31d4fce90cdd" kindref="member">BLACK</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;30m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13" refid="structmod_g_test_1_1_colors_1a19ba9ad319f0148f521fc81ce4a732b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1a19ba9ad319f0148f521fc81ce4a732b4" kindref="member">RED</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;31m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14" refid="structmod_g_test_1_1_colors_1ac5ee4cc06701e4f739e44ffd35690a3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1ac5ee4cc06701e4f739e44ffd35690a3d" kindref="member">GREEN</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;32m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15" refid="structmod_g_test_1_1_colors_1a23d938f521db91249821f67ff08ffdfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1a23d938f521db91249821f67ff08ffdfb" kindref="member">YELLOW</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;33m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16" refid="structmod_g_test_1_1_colors_1a55303e65dd093513603ffee609c646c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1a55303e65dd093513603ffee609c646c2" kindref="member">BLUE</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;34m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17" refid="structmod_g_test_1_1_colors_1a8585ed40343504931d9d5861c3fb7637" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1a8585ed40343504931d9d5861c3fb7637" kindref="member">MAGENTA</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;35m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18" refid="structmod_g_test_1_1_colors_1aaa18037e87ea9ad8f0f8fa48792013b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1aaa18037e87ea9ad8f0f8fa48792013b7" kindref="member">CYAN</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;36m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19" refid="structmod_g_test_1_1_colors_1ac40d103e205cfb291fd8e68672c67465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structmod_g_test_1_1_colors_1ac40d103e205cfb291fd8e68672c67465" kindref="member">WHITE</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\x1B[0;37m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20" refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>{<ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edeaaefe076fa954c7ce5a9a171ab3470637" kindref="member">RIGHT</ref>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespacemod_g_test_1a4bd0c1b21a6ea046a245ed88e6d41969" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemod_g_test_1a4bd0c1b21a6ea046a245ed88e6d41969" kindref="member">gtest_line</ref>(std::string<sp/>box_content,<sp/>std::string<sp/>message,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacemod_g_test_1ad47d86b6e5540986edde5dff95047ed6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ad47d86b6e5540986edde5dff95047ed6" kindref="member">myASSERT_THAT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespacemod_g_test_1a90a4becb77982dbd19c2c5db88391097" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a90a4becb77982dbd19c2c5db88391097" kindref="member">myASSERT_TRUE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="namespacemod_g_test_1a627a49ebb683ff3894978040c636a926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a627a49ebb683ff3894978040c636a926" kindref="member">myASSERT_FALSE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespacemod_g_test_1a6ca46452460c0e271ff2243eef9cdf2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a6ca46452460c0e271ff2243eef9cdf2f" kindref="member">myASSERT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="namespacemod_g_test_1af4bd2754d144a93c4afd8409cf53c3d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1af4bd2754d144a93c4afd8409cf53c3d0" kindref="member">myASSERT_NE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespacemod_g_test_1a908595ebb32e41a169a9c6eec8a98537" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a908595ebb32e41a169a9c6eec8a98537" kindref="member">myASSERT_LT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="namespacemod_g_test_1ae8e36e55c13a111ae37a0fc9a7e78482" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ae8e36e55c13a111ae37a0fc9a7e78482" kindref="member">myASSERT_GT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="namespacemod_g_test_1a6083fb40ccf916b364fb096fc159deb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a6083fb40ccf916b364fb096fc159deb9" kindref="member">myASSERT_LE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="namespacemod_g_test_1a50b0f07db885437270fe064ca5900c9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a50b0f07db885437270fe064ca5900c9a" kindref="member">myASSERT_GE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="namespacemod_g_test_1af78b0d5a08636cc3a4e06ecb9c8018b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1af78b0d5a08636cc3a4e06ecb9c8018b6" kindref="member">myASSERT_STREQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="namespacemod_g_test_1ae3ad418a415f82ed468a02cadeaa06a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ae3ad418a415f82ed468a02cadeaa06a5" kindref="member">myASSERT_STRNE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="namespacemod_g_test_1a921a883387d9ba90afc913edaafe2ca2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a921a883387d9ba90afc913edaafe2ca2" kindref="member">myASSERT_STRCASEEQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="namespacemod_g_test_1a35ee4b5ae14035ba20fe7b64c860fdef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a35ee4b5ae14035ba20fe7b64c860fdef" kindref="member">myASSERT_STRCASENE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="namespacemod_g_test_1aff8534a10b866393c5d26668efbc6f55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1aff8534a10b866393c5d26668efbc6f55" kindref="member">myASSERT_FLOAT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="namespacemod_g_test_1a20d0a2a854ccba1ca227cff6dbf4864a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a20d0a2a854ccba1ca227cff6dbf4864a" kindref="member">myASSERT_DOUBLE_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="namespacemod_g_test_1ab2ec8d6a2a40357f48570b087f3472af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ab2ec8d6a2a40357f48570b087f3472af" kindref="member">myASSERT_NEAR</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="namespacemod_g_test_1aa76fa3be9286665dd1c4a0f8f4ccb0b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1aa76fa3be9286665dd1c4a0f8f4ccb0b9" kindref="member">myASSERT_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="namespacemod_g_test_1ae203b591878b2221a268ea28c6d35054" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ae203b591878b2221a268ea28c6d35054" kindref="member">myASSERT_ANY_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="namespacemod_g_test_1ad249add81acc4c1b86d40f28c83d5dfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ad249add81acc4c1b86d40f28c83d5dfc" kindref="member">myASSERT_NO_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="namespacemod_g_test_1a93502be686134bd1be8d956520d96b08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a93502be686134bd1be8d956520d96b08" kindref="member">myEXPECT_THAT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="namespacemod_g_test_1a57e9970a7e9064113d76bbf073fab3b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a57e9970a7e9064113d76bbf073fab3b8" kindref="member">myEXPECT_TRUE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="namespacemod_g_test_1ad3b14eeed876411dca44dd40542ec180" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ad3b14eeed876411dca44dd40542ec180" kindref="member">myEXPECT_FALSE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="namespacemod_g_test_1a4789ff52bddb9c7c341ee6ea7315c47f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a4789ff52bddb9c7c341ee6ea7315c47f" kindref="member">myEXPECT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="namespacemod_g_test_1acd5acc1ccb040b7ce944df812d456d10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1acd5acc1ccb040b7ce944df812d456d10" kindref="member">myEXPECT_NE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="namespacemod_g_test_1a736aba653f4056ca33cc5e520bafbb5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a736aba653f4056ca33cc5e520bafbb5b" kindref="member">myEXPECT_LT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="namespacemod_g_test_1a3a86c69a2e5bfbd19b174f36287badd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a3a86c69a2e5bfbd19b174f36287badd6" kindref="member">myEXPECT_GT</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="namespacemod_g_test_1ad75eceec6d9685c7de53ec88de2af3cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1ad75eceec6d9685c7de53ec88de2af3cd" kindref="member">myEXPECT_LE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="namespacemod_g_test_1aef45c8d625655e1a4a2a84e4c83c4cc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1aef45c8d625655e1a4a2a84e4c83c4cc4" kindref="member">myEXPECT_GE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="namespacemod_g_test_1abfcd7074042193604359d354a5fbac8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1abfcd7074042193604359d354a5fbac8e" kindref="member">myEXPECT_STREQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="namespacemod_g_test_1a3b0d10d266d2e2ce6c8ced7aa47b9876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a3b0d10d266d2e2ce6c8ced7aa47b9876" kindref="member">myEXPECT_STRNE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="namespacemod_g_test_1a0db5669798b3055c74f15155c75f166e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a0db5669798b3055c74f15155c75f166e" kindref="member">myEXPECT_STRCASEEQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="namespacemod_g_test_1aca506083064f68e67d2c227b771cde36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1aca506083064f68e67d2c227b771cde36" kindref="member">myEXPECT_STRCASENE</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="namespacemod_g_test_1a24d61fde2427e30c6abb8aae4705be48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a24d61fde2427e30c6abb8aae4705be48" kindref="member">myEXPECT_FLOAT_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="namespacemod_g_test_1af5442cbb9514a63c1c12a77542b46954" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1af5442cbb9514a63c1c12a77542b46954" kindref="member">myEXPECT_DOUBLE_EQ</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="namespacemod_g_test_1a49a6bddbee4ad6a7946314f2371fd2ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a49a6bddbee4ad6a7946314f2371fd2ca" kindref="member">myEXPECT_NEAR</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="namespacemod_g_test_1a038d37a7ac2a56b899ba49cc93aa13fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a038d37a7ac2a56b899ba49cc93aa13fa" kindref="member">myEXPECT_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="namespacemod_g_test_1a5350a0913c9a7236721ded6cd1d581db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a5350a0913c9a7236721ded6cd1d581db" kindref="member">myEXPECT_ANY_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="namespacemod_g_test_1a6815e420ad7b3f843347f20d429902fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemod_g_test_1a6815e420ad7b3f843347f20d429902fc" kindref="member">myEXPECT_NO_THROW</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expectation,<sp/>std::string<sp/>box_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>color<sp/>=<sp/><ref refid="namespacemod_g_test_1aaf820fda40d85174d201ae59807f1371" kindref="member">COLORS</ref>.DEFAULT,<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8ede" kindref="member">align_type</ref><sp/>align<sp/>=<sp/><ref refid="namespacemod_g_test_1a0dfa7cbee2b4bba6bcf87aa0f14c8edea2cd87983c0998c1d6e59f0638f71c6d8" kindref="member">LEFT</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/modGTest.h"/>
  </compounddef>
</doxygen>
